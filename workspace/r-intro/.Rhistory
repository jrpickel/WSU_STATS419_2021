handshake = function(n=1,plotme=F){
if(floor(n) == n && n > 0){
num_of_handshake = n*(n-1)/2;
if(plotme == F){
print(paste0("The number of handshakes is ",num_of_handshake))
}
else {
m = matrix(1,n,n)
for(i in c(1:n)){
m[i,i] = 0
}
title = paste0("The number of hand shakes is ",num_of_handshake)
network = graph.adjacency(m)
plot(network,main = title )
}
}
else{
print("Please enter a integer greater than 0")
}
}
handshake(1,T)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
handshake = function(n=1,plotme=F){
if(floor(n) == n && n > 0){
num_of_handshake = n*(n-1)/2;
if(plotme == F){
print(paste0("The number of handshakes is ",num_of_handshake))
}
else {
m = matrix(1,n,n)
for(i in c(1:n)){
m[i,i] = 0
}
title = paste0("The number of hand shakes is ",num_of_handshake)
network = graph.adjacency(m)
plot(network,main = title )
}
}
else{
print("Please enter a integer greater than 0")
}
}
handshake(1,T)
handshake = function(n=1,plotme=F){
if(floor(n) == n && n > 0){
num_of_handshake = n*(n-1)/2;
if(plotme == F){
print(paste0("The number of handshakes is ",num_of_handshake))
}
else {
m = matrix(1,n,n)
for(i in c(1:n)){
m[i,i] = 0
}
title = paste0("The number of hand shakes is ",num_of_handshake)
network = graph.adjacency(m)
plot(network,main = title )
}
}
else{
print("Please enter a integer greater than 0")
}
}
handshake(4,T)
setwd("C:/_git_/WSU_STATS419_2021/workspace/r-intro")
library(devtools)
install.packages(devtools,dependencies = T)
install.packages("devtools",dependencies = T)
install.packages("devtools", dependencies = T)
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
handshake(4,T)
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
#original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
final_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/final.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
#original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
#final_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/final.txt") );
fileName <- source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/'original.txt'") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
knitr::opts_chunk$set(echo = T)
library(tinytex)
#install.packages("stringr")            # Install stringr package
#install.packages('igraph')
library(stringr)                        # Load stringr package
library(igraph)
library(devtools)
my.source = 'github';
github.path = "https://raw.githubusercontent.com/jrpickel/WSU_STATS419_2021/";
source_url( paste0(github.path,"main/functions/functions-intro.R") );
# setup the two text files need for letter count functions
#original_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/original.txt") );
#final_file = source_url( paste0(github.path,"main/workspace/r-intro/dataset/final.txt") );
fileName <- "original.txt";
original = readChar(fileName, file.info(fileName)$size)
original_df = letter_count(original)
fileName <- "final.txt"
final = readChar(fileName, file.info(fileName)$size)
final_df = letter_count(final)
original_df
final_df
og_table = as.table(as.matrix(original_df))
og_bar = barplot(og_table,main="Letter Count of original.txt")
final_table = as.table(as.matrix(final_df))
f_bar = barplot(final_table,main="Letter Count of final.txt")
og_bar
f_bar
og_table = as.table(as.matrix(original_df))
og_bar = barplot(og_table,main="Letter Count of original.txt")
final_table = as.table(as.matrix(final_df))
f_bar = barplot(final_table,main="Letter Count of final.txt")
fileName <- "original.txt";
original = readChar(fileName, file.info(fileName)$size)
original_df = letter_count(original)
fileName <- "final.txt"
final = readChar(fileName, file.info(fileName)$size)
final_df = letter_count(final)
original_df
final_df
fileName <- "original.txt";
original = readChar(fileName, file.info(fileName)$size)
original_df = letter_count(original)
fileName <- "final.txt"
final = readChar(fileName, file.info(fileName)$size)
final_df = letter_count(final)
original_df
final_df
handshake(4,T)
handshake(4,T)
final_table = as.table(as.matrix(final_df))
f_bar = barplot(final_table,main="Letter Count of final.txt")
f_bar
final_table = as.table(as.matrix(final_df))
f_bar = barplot(final_table,main="Letter Count of final.txt")
final_table = as.table(as.matrix(final_df))
barplot(final_table,main="Letter Count of final.txt")
og_table = as.table(as.matrix(original_df))
barplot(og_table,main="Letter Count of original.txt")
final_table = as.table(as.matrix(final_df))
barplot(final_table,main="Letter Count of final.txt")
og_table = as.table(as.matrix(original_df))
barplot(og_table,main="Letter Count of original.txt")
sum(original_df)
sum(original_df)
sum(final_df)
# generate a random 3x3 matrix
m = matrix(floor(runif(9,min=1,max=25)),nrow=3,ncol=3)
# display matrix
m
# compute determinant
computeDeterminant(m)
